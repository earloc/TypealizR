//HintName: TypealizR.Tests.CodeFirst.IMethodsWithXmlCommentParameters.g.cs
// <auto-generated/>
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using Microsoft.Extensions.Localization;
namespace TypealizR.Tests.CodeFirst {
    [GeneratedCode("TypealizR.CodeFirstSourceGenerator", "1.0.0.0")]
    internal partial class MethodsWithXmlCommentParameters: IMethodsWithXmlCommentParameters {
        private readonly IStringLocalizer<IMethodsWithXmlCommentParameters> localizer;
        public MethodsWithXmlCommentParameters (IStringLocalizer<IMethodsWithXmlCommentParameters> localizer) {
          this.localizer = localizer;
        }
        #region methods
        #region typealized Greet
        /// <summary>
        /// Hello {0}, the current time is: {1}
        /// <summary>
        public LocalizedString Greet_Raw
        {
            get
            {
              var localizedString = localizer[@"Greet"];
              if (!localizedString.ResourceNotFound)
              {
                  return localizedString;
              }
              return localizer[@"Hello {0}, the current time is: {1}"];
            }
        }
        /// <summary>
        /// Hello {0}, the current time is: {1}
        /// <summary>
        public LocalizedString Greet (string user, DateTimeOffset now)
        {
            var localizedString = localizer[@"Greet", user, now];
            if (!localizedString.ResourceNotFound)
            {
                return localizedString;
            }
          return localizer[@"Hello {0}, the current time is: {1}", user, now];
        }
        #endregion
        #region typealized Farewell
        /// <summary>
        /// The current time is: {1}, goodbye '{0}'
        /// <summary>
        public LocalizedString Farewell_Raw
        {
            get
            {
              var localizedString = localizer[@"Farewell"];
              if (!localizedString.ResourceNotFound)
              {
                  return localizedString;
              }
              return localizer[@"The current time is: {1}, goodbye '{0}'"];
            }
        }
        /// <summary>
        /// The current time is: {1}, goodbye '{0}'
        /// <summary>
        public LocalizedString Farewell (string user, DateTimeOffset now)
        {
            var localizedString = localizer[@"Farewell", user, now];
            if (!localizedString.ResourceNotFound)
            {
                return localizedString;
            }
          return localizer[@"The current time is: {1}, goodbye '{0}'", user, now];
        }
        #endregion
        #region typealized CallForBeetlejuice
        /// <summary>
        /// 1.{0} 2.{0} 3.{0}
        /// <summary>
        public LocalizedString CallForBeetlejuice_Raw
        {
            get
            {
              var localizedString = localizer[@"CallForBeetlejuice"];
              if (!localizedString.ResourceNotFound)
              {
                  return localizedString;
              }
              return localizer[@"1.{0} 2.{0} 3.{0}"];
            }
        }
        /// <summary>
        /// 1.{0} 2.{0} 3.{0}
        /// <summary>
        public LocalizedString CallForBeetlejuice (string name)
        {
            var localizedString = localizer[@"CallForBeetlejuice", name];
            if (!localizedString.ResourceNotFound)
            {
                return localizedString;
            }
          return localizer[@"1.{0} 2.{0} 3.{0}", name];
        }
        #endregion
        #region typealized DoIt
        /// <summary>
        /// {1}, {0}. {1}!!
        /// <summary>
        public LocalizedString DoIt_Raw
        {
            get
            {
              var localizedString = localizer[@"DoIt"];
              if (!localizedString.ResourceNotFound)
              {
                  return localizedString;
              }
              return localizer[@"{1}, {0}. {1}!!"];
            }
        }
        /// <summary>
        /// {1}, {0}. {1}!!
        /// <summary>
        public LocalizedString DoIt (string name, string verb)
        {
            var localizedString = localizer[@"DoIt", name, verb];
            if (!localizedString.ResourceNotFound)
            {
                return localizedString;
            }
          return localizer[@"{1}, {0}. {1}!!", name, verb];
        }
        #endregion
        #endregion
        #region properties
        #endregion
    }
}