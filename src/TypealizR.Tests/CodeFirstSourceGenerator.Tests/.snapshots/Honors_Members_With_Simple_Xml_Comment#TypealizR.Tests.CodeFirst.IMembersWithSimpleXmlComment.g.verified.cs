//HintName: TypealizR.Tests.CodeFirst.IMembersWithSimpleXmlComment.g.cs
// <auto-generated/>
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using Microsoft.Extensions.Localization;
namespace TypealizR.Tests.CodeFirst {
    [GeneratedCode("TypealizR.CodeFirstSourceGenerator", "1.0.0.0")]
    internal partial class MembersWithSimpleXmlComment: IMembersWithSimpleXmlComment {
        private readonly IStringLocalizer<IMembersWithSimpleXmlComment> localizer;
        public MembersWithSimpleXmlComment (IStringLocalizer<IMembersWithSimpleXmlComment> localizer) {
          this.localizer = localizer;
        }
        #region methods
        #region typealized Hello
        /// <summary>
        /// Hello {0}!
        /// <summary>
        public LocalizedString Hello_Raw
        {
            get
            {
              var localizedString = localizer[@"Hello"];
              if (!localizedString.ResourceNotFound)
              {
                  return localizedString;
              }
              return localizer[@"Hello {0}!"];
            }
        }
        /// <summary>
        /// Hello {0}!
        /// <summary>
        public LocalizedString Hello (string world) // greets someone
        {
            var localizedString = localizer[@"Hello", world];
            if (!localizedString.ResourceNotFound)
            {
                return localizedString;
            }
          return localizer[@"Hello {0}!", world];
        }
        #endregion
        #endregion
        #region properties
        #region typealized HelloProperty
        /// <summary>
        /// Hello world!
        /// <summary>
        public LocalizedString HelloProperty // greets someone with a property
        {
          get
            {
              var localizedString = localizer[@"HelloProperty"];
              if (!localizedString.ResourceNotFound)
              {
                  return localizedString;
              }
              return localizer[@"Hello world!"];
          }
        }
        #endregion
        #region typealized Greeting
        /// <summary>
        /// Greetings, fellow developer!
        /// <summary>
        public LocalizedString Greeting // the greeting
        {
          get
            {
              var localizedString = localizer[@"Greeting"];
              if (!localizedString.ResourceNotFound)
              {
                  return localizedString;
              }
              return localizer[@"Greetings, fellow developer!"];
          }
        }
        #endregion
        #region typealized GreetingWithMultilineComment
        /// <summary>
        /// Greetings, fellow developer!
 This line here will be in the generated default resource-key, also.
 And also this one, even with newlines #wowh@x0r!
        /// <summary>
        public LocalizedString GreetingWithMultilineComment // a multiline greeting
        {
          get
            {
              var localizedString = localizer[@"GreetingWithMultilineComment"];
              if (!localizedString.ResourceNotFound)
              {
                  return localizedString;
              }
              return localizer[@"Greetings, fellow developer!
 This line here will be in the generated default resource-key, also.
 And also this one, even with newlines #wowh@x0r!"];
          }
        }
        #endregion
        #endregion
    }
}